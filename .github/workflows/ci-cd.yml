name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
    - name: Install dependencies
      run: |
        uv sync
        uv pip install -e ".[dev]"
    - name: Verify uv installation
      run: |
        which uv
        uv --version
    - name: Run tests
      run: make test

  deploy:
    needs: test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
    - name: Install build dependencies
      run: |
        uv sync
        uv pip install build twine
    - name: Build package
      run: make build
    - name: Publish to PyPI
      run: make publish
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
